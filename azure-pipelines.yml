# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: ubuntu-latest

variables:
  AZURE_VAR2: $(PIPELINEVAR2)
  AZURE_VAR3:

steps:
  - bash: |
    env:
      AZURE_VAR3: $(AZURE_VAR2)

  - powershell: |
    env:
      AZURE_VAR3: $(AZURE_VAR2)
  - script:
      echo $(PIPELINEVAR1)
      echo $(PIPELINEVAR2)
      echo $(AZURE_VAR2)
      echo $(AZURE_VAR3)
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      AZURE_VAR3: $(PIPELINEVAR2)
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'build'
