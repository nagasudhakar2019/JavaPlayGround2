# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: ubuntu-latest
#
#variables:
#  AZURE_VAR1: $(PIPELINEVAR1)
#  MY_MAPPED_ENV_VAR: somevalue

steps:
- bash: |
    echo "mapped value is : $MY_MAPPED_VAR"
  env:
    MY_MAPPED_VAR: $(PIPELINEVAR2)
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    MY_MAPPED_ENV_VAR: $(MY_MAPPED_VAR)
    MY_MAPPED_ENV_VAR2: $(env:MY_MAPPED_VAR)
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
