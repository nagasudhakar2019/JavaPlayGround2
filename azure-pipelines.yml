# Gradle

# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

pool:
  vmImage: ubuntu-latest

#variables:
#  gloabal_var1 : defaultvalue

steps:
  - powershell: |
      Write-Host "This works $env:MY_MAPPED_ENV_VAR"
      Write-Host "##vso[task.setvariable variable=gloabal_var1]crused apples"
    env:
      MY_MAPPED_ENV_VAR: $(secretval1)
  - powershell: |
      Write-Host "MY_MAPPED_ENV_VAR is $env:MY_MAPPED_ENV_VAR"
      Write-Host "gloabal_var1 is $env:gloabal_var1"

#  - task: Gradle@2
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      javaHomeOption: 'JDKVersion'
#      jdkVersionOption: '1.8'
#      jdkArchitectureOption: 'x64'
#      publishJUnitResults: true
#      testResultsFiles: '**/TEST-*.xml'
#      tasks: 'build'
